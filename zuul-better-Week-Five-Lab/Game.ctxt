#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment1.params=name\ description
comment1.target=void\ createRoom(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Create\ a\ room,\ given\ a\ name\ and\ description.\r\n\ @param\ name\ \ The\ name\ of\ the\ room\ we\ want\ to\ create.\r\n\ @param\ description\ \ A\ string\ giving\ the\ description\ of\ the\ room.\r\n
comment10.params=command
comment10.target=void\ goRoom(Command)
comment10.text=\ \r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment11.params=
comment11.target=void\ look()
comment11.text=\r\n\ "Look"\ was\ entered.\ Prints\ out\ the\ description\ of\ the\ room\ and\ the\ exits\ after\ they\ have\ been\ originally\ printed.\r\n
comment12.params=command
comment12.target=void\ addRoom(Command)
comment12.text=\r\n\ "Add"\ was\ entered.\ Creates\ a\ room\ object\ that's\ connected\ to\ the\ current\ room\ in\ a\ user-specified\ direction.\r\n
comment13.params=command
comment13.target=void\ destroyRoom(Command)
comment13.text=\r\n\ "Destroy"\ was\ entered.\ Destroys\ the\ room\ specified,\ provided\ that\ the\ room\ isn't\ the\ current\ room.\r\n
comment14.params=command
comment14.target=boolean\ quit(Command)
comment14.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment2.params=name
comment2.target=void\ removeRoom(java.lang.String)
comment2.text=\r\n\ Destroy\ a\ room,\ given\ the\ room's\ name.\r\n\ @param\ name\ \ The\ name\ of\ the\ room\ we\ want\ to\ destroy.\r\n
comment3.params=roomName\ direction\ destination
comment3.target=void\ setRoomExit(java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Set\ an\ exit\ for\ a\ room,\ given\ the\ name\ of\ that\ room,\ a\ direction\ for\ the\ exit,\ and\ the\ room\ the\ exit\ leads\ to.\r\n\ This\ avoids\ having\ to\ explicitly\ get\ the\ room\ object\ from\ the\ roomList\ every\ time\ that\ an\ exit\ is\ set.\r\n\ @param\ roomName\ \ The\ name\ of\ the\ room\ that\ an\ exit\ is\ being\ set\ for.\r\n\ @param\ direction\ \ The\ direction\ that\ the\ exit\ leads\ out\ of\ the\ room.\r\n\ @param\ destination\ \ The\ room\ that\ the\ exit\ leads\ to.\r\n
comment4.params=roomName\ direction
comment4.target=void\ legitimateExit(java.lang.String,\ java.lang.String)
comment5.params=
comment5.target=void\ createRooms()
comment5.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment6.params=
comment6.target=void\ play()
comment6.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment7.params=
comment7.target=void\ printWelcome()
comment7.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment8.params=command
comment8.target=boolean\ processCommand(Command)
comment8.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment9.params=
comment9.target=void\ printHelp()
comment9.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
numComments=15
